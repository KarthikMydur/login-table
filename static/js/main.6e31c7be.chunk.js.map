{"version":3,"sources":["action/actionTypes.js","reducer/employeeReducer.js","reducer/userReducer.js","action/employeeAction.js","component/Employees.js","action/userAction.js","component/Login.js","App.js","reducer/rootReducer.js","index.js","store/configureStore.js"],"names":["actionTypes","GET_USER","GET_EMPLOYEES","initialState","employees","employeeReducer","state","action","type","console","log","payload","require","default","users","userReducer","getEmployees","data","Employees","props","empList","this","onGetEmp","prevProps","setState","align","length","Table","style","width","TableHead","TableRow","TableCell","TableBody","map","emp","key","id","name","age","gender","email","phoneNo","React","Component","connect","user","dispatch","empData","getUser","validUsername","RegExp","validPassword","Login","handleChange","e","preventDefault","target","value","errors","username","test","password","handleClick","valid","Object","values","forEach","val","validateForm","onLogin","Swal","fire","icon","title","window","location","href","text","Typography","variant","FormControl","InputLabel","FilledInput","onChange","className","Button","color","onClick","loginData","App","path","component","exact","combineReducers","rootReducer","store","createStore","applyMiddleware","thunk","logger","configureStore","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e31c7be.chunk.js","sourcesContent":["const actionTypes = {\r\n    GET_USER: 'GET_USER',\r\n    GET_EMPLOYEES: 'GET_EMPLOYEES'\r\n}\r\n\r\nexport default actionTypes;","import actionTypes from '../action/actionTypes';\r\n\r\nconst initialState = {\r\n    employees: []\r\n}\r\n\r\nconst employeeReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.GET_EMPLOYEES:\r\n            console.log('reducer', action.payload);\r\n            return {...state, employees: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default employeeReducer;","const { default: actionTypes } = require(\"../action/actionTypes\")\r\n\r\nconst initialState = {\r\n    users: []\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.GET_USER:\r\n            return {...state, users: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default userReducer;\r\n\r\n","import empData from '../api/Employee.json';\r\nimport actionTypes from './actionTypes';\r\n\r\nexport const startGetEmployees = () => {\r\n    return (dispatch) => {\r\n        dispatch(getEmployees(empData))\r\n    }\r\n}\r\n\r\nexport const getEmployees = (data) => {\r\n    console.log('action', data);\r\n    return{\r\n        type: actionTypes.GET_EMPLOYEES,\r\n        payload: data\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { startGetEmployees } from '../action/employeeAction';\r\n\r\nimport { Table, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core';\r\n\r\nclass Employees extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            empList: []\r\n        }\r\n    }\r\n   \r\n    componentDidMount(){\r\n        this.props.onGetEmp()   \r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.employees !== this.props.employees){\r\n            this.setState({empList: this.props.employees})\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        console.log('inrender', this.state.empList);\r\n        \r\n        return(\r\n            <div align='center'>\r\n                <h1>Employees - {this.state.empList.length}</h1>\r\n                <Table style={{width: 750}}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align='center'>ID</TableCell>\r\n                            <TableCell align='center'>Name</TableCell>\r\n                            <TableCell align='center'>Age</TableCell>\r\n                            <TableCell align='center'>Gender</TableCell>\r\n                            <TableCell align='center'>Email</TableCell>\r\n                            <TableCell align='center'>PhoneNo.</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    {\r\n                        <TableBody>\r\n                            {this.state.empList.map((emp) => (\r\n                                <TableRow key={emp.id}>\r\n                                    <TableCell align='center'>{emp.id}</TableCell>\r\n                                    <TableCell align='center'>{emp.name}</TableCell>\r\n                                    <TableCell align='center'>{emp.age}</TableCell>\r\n                                    <TableCell align='center'>{emp.gender}</TableCell>\r\n                                    <TableCell align='center'>{emp.email}</TableCell>\r\n                                    <TableCell align='center'>{emp.phoneNo}</TableCell>\r\n\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    }\r\n                </Table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        employees: state.employees.employees.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        onGetEmp: () => dispatch(startGetEmployees())\r\n    }  \r\n}\r\n\r\nexport default connect (mapStateToProps, mapDispatchToProps) (Employees);","import loginData from '../api/Login.json';\r\nimport actionTypes from './actionTypes';\r\n\r\nexport const startGetUser = () => {\r\n    return(dispatch) => {\r\n        dispatch(getUser(loginData))\r\n    }\r\n}\r\n\r\nexport const getUser = (data) => {\r\n    return {\r\n        type: actionTypes.GET_USER,\r\n        payload: data\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { startGetUser } from '../action/userAction';\r\nimport { connect } from 'react-redux';\r\nimport  Swal from 'sweetalert2';\r\nimport \"./Login.css\";\r\n\r\nimport { Typography, FormControl, InputLabel, FilledInput, Button } from '@material-ui/core';\r\n\r\n\r\nconst validUsername = RegExp(\r\n    /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\r\n  );\r\n\r\nconst validPassword = RegExp(\r\n    /^((?=.*\\d)(?=.*[a-z]).{8,15})$/\r\n);\r\n\r\nconst validateForm = (errors) => {\r\n    let valid = true;\r\n    Object.values(errors).forEach((val) => val.length > 0 && (valid = false));\r\n    return valid;\r\n};\r\n\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            errors: {\r\n                username:\"\",\r\n                password:\"\"\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    handleChange = (e) => {\r\n        e.preventDefault();\r\n        const {name, value } = e.target;\r\n        let errors = this.state.errors;\r\n       \r\n        //testing the Regex and assigning the error\r\n        switch(name) {\r\n            case \"username\":\r\n                errors.username = validUsername.test(value) ? \"\" : \"Username is not valid\";\r\n                break;\r\n            case \"password\":\r\n                errors.password = validPassword.test(value) ? \"\" : \"Password is not valid\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.setState({ errors, [name]: value });\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        e.preventDefault();\r\n        if(validateForm(this.state.errors)){\r\n            this.props.onLogin()\r\n            const { username, password } = this.props.users;\r\n            if((this.state.username === username) && (this.state.password === password)){\r\n                //alert on login\r\n                Swal.fire({\r\n                    icon: \"success\",\r\n                    title: \"Sucessfully Log in!!\"\r\n                });\r\n                window.location.href = \"/user/employees\";\r\n            }else{\r\n                Swal.fire({\r\n                    icon: \"error\",\r\n                    title: \"Oops...!!\",\r\n                    text: \"please enter the valid details\"\r\n                    });\r\n                }\r\n        }else{\r\n            Swal.fire({\r\n                icon: \"error\",\r\n                title: \"Oops...!!\",\r\n                text: \"please enter the valid details\"\r\n              });\r\n        }\r\n        \r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.props.onLogin()\r\n    }\r\n\r\n    render() {\r\n        const {errors} = this.state;\r\n        return (\r\n            <div align='center'>\r\n                <br/>\r\n                <br/>\r\n                <Typography variant=\"h4\">Login</Typography>\r\n                <br/>\r\n                <br/>\r\n                <form>\r\n                    <FormControl variant='filled'>\r\n                        <InputLabel>Email</InputLabel>\r\n                        <FilledInput\r\n                            style={{ width: 500}}\r\n                            type=\"text\"\r\n                            name='username'\r\n                            value={this.state.username}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        {errors.username.length > 0 && (\r\n                            <span className=\"error\">{errors.username}</span>\r\n                        )}\r\n                    </FormControl>\r\n                    <br/>\r\n                    <br/>\r\n                    <FormControl variant='filled'>\r\n                        <InputLabel>Password</InputLabel>\r\n                        <FilledInput\r\n                            style={{width: 500}}\r\n                            type='password'\r\n                            name='password'\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        {errors.password.length > 0 && (\r\n                            <span className=\"error\">{errors.password}</span>\r\n                        )}\r\n                    </FormControl>\r\n                    <br/>\r\n                    <br/>\r\n                   <Button\r\n                    variant='contained'\r\n                    color='primary'\r\n                    onClick={this.handleClick}\r\n                    >Login</Button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.users.users\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        onLogin: () => dispatch(startGetUser())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React from 'react';\r\nimport Employees from './component/Employees';\r\nimport Login from './component/Login';\r\nimport { Route, BrowserRouter } from 'react-router-dom';\r\n\r\nconst App = () => (\r\n    <div>\r\n        <BrowserRouter>\r\n            <Route path='/user/employees' component={Employees} exact={true}/>\r\n            <Route  path=\"/\" component={Login} exact={true}/>\r\n        </BrowserRouter>\r\n    </div>\r\n)\r\n\r\nexport default App;","const { combineReducers } = require(\"redux\");\r\nconst { default: employeeReducer } = require(\"./employeeReducer\");\r\nconst { default: userReducer } = require(\"./userReducer\");\r\n\r\nexport const rootReducer = combineReducers({\r\n    users: userReducer,\r\n    employees: employeeReducer\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from './store/configureStore';\r\n\r\nconst store = configureStore();\r\n\r\nconst app = (\r\n    <Provider store = {store}>\r\n        <App/>\r\n    </Provider>\r\n)\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n","import { createStore, applyMiddleware, combineReducers} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { rootReducer } from '../reducer/rootReducer';\r\n\r\nconst configureStore = () => {\r\n    const store = createStore(rootReducer, applyMiddleware(thunk, logger))\r\n    return store;\r\n}\r\n\r\nexport default configureStore;\r\n"],"sourceRoot":""}